doc/readme
    嗯,这是LuoZH的第二个次从新设计,第一由于一直忽略分页这个问题,导致整个构架上上存在一个硬伤,所以不得不从新构造,但是幸运的是,我走的还不远,修改幅度不至于很变态.当然,这次我考虑修改一下项目名,上次是LuoZH,其我名字拼音前几个字符,不是我自负,实在是取名字是一件头疼的事.这次我打算改名位gmL,没有实际意义,只是为了好看.这个名字的由来实属巧合,上次的版本,项目主目录是~/gm/LuoZH/,有一次我进目录的时候由于首脑不协调,直接输成了cd ~/gmL,我一看这个gmL长相俊俏,字符短小,的确是个不错的名字,于是就打算换这个名字,或许从这里面能看出我的性格是个花心人士,也许某天见到某位漂亮的姑娘就遗弃原来的爱人,不过目前我还没发现我有这个毛病,只是对漂亮女人有中反感,嗯,打击习惯了.
    gmL的安装方法很简单,进入主目录,先在boot目录下make create创建一个1.44MB的软盘镜像gmL.img,然后会主目录make就可以了,对于make create这步将来也会合并到make里面.不过这不是目前的事.至于软盘映像,我有考虑换硬盘映像,直接省去软盘相关编程.
    内核的主要框架,打算使用超级精简模式,只具备基本的调度,内存管理模块,进程通信,其他部分经交给进程处理,包括文件系统.本来我打算,内核不提供任何供进程使用的接口,不提供系统调用,所有的工作都有进程协作完成.这听起来比丝袜还有诱惑力.但是,还有一个问题,就是对硬件处理上还有几个很纠结的问题,一个是中断,比如硬盘中断,如果系统不提供接口,那么这些东西就更纠结.还有一个问题,进程通信主要靠共享内存,如果系统不提供接口,那么,内存共享更纠结.所以系统还是要提供很小的接口,尽量小.
    进程空间,打算使用linux最近版本相似的策略,即4GB全部归她所有,内核使用高1GB.而不使用我参考的linux0.12内核处理方式.这也是这次重铸的主要原因.并且这次要先考虑分页机制了.
    系统设计很像现在工厂的流水线设计.我讨厌流水线,及其讨厌,这是瑞仪打工时留下的后遗症.我不得不承认,流水线是优秀的生产模式,效率及其高效,不过前提是节点上是机器,而不是人,否则就是对底层人们最大化的剥削,完全抵消不了它对下次人们的伤害.
    好吧,我已经发现我是一个头脑混乱的人.你们能看明白上面我写的是什么吗?

